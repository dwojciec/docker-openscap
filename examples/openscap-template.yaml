apiVersion: v1
kind: Template
metadata:
  name: openscap
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: openscap
    name: rhel
  spec:
    tags:
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/rhel7/rhel:latest
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: openscap
    name: openscap
- apiVersion: v1
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: openscap
    name: openscap
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: openscap:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/sterburg/docker-openscap.git
      sourceSecret:
        name: git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: rhel:latest
        noCache: true
      type: Docker
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: openscap
    name: openscap
  spec:
    replicas: 1
    selector:
      app: openscap
      deploymentconfig: openscap
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.openscap.image.entrypoint: '["/bin/bash"]'
        labels:
          app: openscap
          deploymentconfig: openscap
      spec:
        containers:
        - command:
          - bash
          - -c
          - sleep 86400
          env:
          - name: IMAGE
            value: registry.access.redhat.com/rhel7/rhel:latest
          - name: EMAIL_RESULT
            value: sterburg@redhat.com
          image: openscap:latest
          imagePullPolicy: Always
          name: openscap
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-sock
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker-sock
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        containerNames:
        - openscap
        from:
          kind: ImageStreamTag
          name: openscap:latest
      type: ImageChange
